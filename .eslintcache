[{"E:\\www.web.com\\my-react-demo\\src\\index.js":"1","E:\\www.web.com\\my-react-demo\\src\\reportWebVitals.js":"2","E:\\www.web.com\\my-react-demo\\src\\App.js":"3","E:\\www.web.com\\my-react-demo\\src\\component\\reducer.js":"4"},{"size":568,"mtime":1608626822109,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":1903,"mtime":1608626569996,"results":"8","hashOfConfig":"6"},{"size":558,"mtime":1608619668889,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"6qr8su",{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"14"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"17","usedDeprecatedRules":"14"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"E:\\www.web.com\\my-react-demo\\src\\index.js",[],"E:\\www.web.com\\my-react-demo\\src\\reportWebVitals.js",[],["21","22"],"E:\\www.web.com\\my-react-demo\\src\\App.js",["23"],"import React, {useEffect, createContext, useContext, useReducer} from 'react';\nimport {initStatus, reducer} from './component/reducer';\n\nconst _STATE = createContext();\nconst _DISPATCH = createContext();\n\nconst creator = (type, payload, error) => {\n  return {\n      type: type,\n      payload,\n      error\n  }\n}\n\nfunction App (){\n  const [state, dispatch] = useReducer(reducer, initStatus);\n\n  return <React.Fragment>\n          <_STATE.Provider value={state}>\n            <_DISPATCH.Provider value={dispatch}>\n                <Child />\n            </_DISPATCH.Provider>\n          </_STATE.Provider>\n        </React.Fragment>\n}\n\nfunction Child(){\n  const state = useContext(_STATE);\n  const dispatch = useContext(_DISPATCH);\n\n  const getList = async () => {\n    try {\n      const res = await fetch('http://www.web.com/test.php').then((res) => res.json());\n      dispatch(creator(\"getList\", {\n        list:res\n      }));\n    } catch (error) {\n      alert(error);\n    }\n  }\n\n  return <React.Fragment>\n          <div>{state.count}</div>\n          <button onClick = {() => dispatch(creator(\"add\"))}>增加</button>\n          <button onClick = {() => dispatch(creator(\"reduce\"))}>减少</button>\n          <div><button onClick = {() => getList()}>获取我的github仓库</button></div>\n          <table style={{textAlign: 'center'}}>\n            <tr>\n              <th>\n                仓库名\n              </th>\n              <th>\n                仓库地址\n              </th>\n            </tr>\n            {\n              state.list.map((item, index) => {\n                return <tr key={'line' + index}>\n                    <td>\n                      {item.name}\n                    </td>\n                    <td>\n                      {item.html_url}\n                    </td>\n                  </tr>\n              })\n            }\n          </table>\n        </React.Fragment>\n}\nexport default App;\n","E:\\www.web.com\\my-react-demo\\src\\component\\reducer.js",["24"],"const initStatus = {\r\n    count: 0,\r\n    list: []\r\n};\r\n\r\nconst reducer = (state, action) => {\r\n    switch (action.type) {\r\n        case 'add':\r\n            return {\r\n                ...state, count: state.count + 1\r\n            };\r\n        case 'reduce':\r\n            return {\r\n                ...state, count: state.count - 1\r\n            };\r\n        case 'getList':\r\n            return {\r\n                ...state, list: action.payload.list\r\n            }\r\n        default:\r\n            throw 'Error';\r\n    }\r\n}\r\n\r\nexport {\r\n    initStatus,\r\n    reducer\r\n}",{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","severity":1,"message":"30","line":1,"column":16,"nodeType":"31","messageId":"32","endLine":1,"endColumn":25},{"ruleId":"33","severity":1,"message":"34","line":21,"column":13,"nodeType":"35","messageId":"36","endLine":21,"endColumn":27},"no-native-reassign",["37"],"no-negated-in-lhs",["38"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","no-throw-literal","Expected an error object to be thrown.","ThrowStatement","object","no-global-assign","no-unsafe-negation"]